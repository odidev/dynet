sudo: required
services:
  - docker
dist: xenial
env:
  global:
    - PYTHON=python TWINE_USERNAME=danielh
    - secure: "j8Ro21/7h5FKuJHPJRHYfOiZHMoAfD/dfpqXZreGrl79jVSEdPZmmOdvFH++CqrRdttpxOf2Lg5qOfpXfziC5ecJx1USslBSo2qwAG9JwPkwjCK7MhouM64yhVedj9Es/H635aufbyRsDIhKr5poPrrH+UebEq/63QpEdDWIWq8="
branches:
  only:
    - master
    - arm_test
stages:
  - test
  - name: test_pip
    if: repo = clab/dynet AND tag IS present
jobs:
  include:
    - os: linux
      arch: arm64-graviton2
      virt: lxd
      group: edge
      compiler: gcc
      language: python
      python: 3.6
      env: PYVER=3.6 PYNUM=3 PYTHON_INSTALL=pip BUILD_ARCH=aarch64
    #- os: linux
    #  compiler: gcc
    #  language: python
    #  python: 3.6
    #  env: PYVER=3.6 PYNUM=3 PYTHON_INSTALL=pip BUILD_ARCH=x86_64
    #- os: linux
    #  arch: arm64
    #  dist: xenial
    #  compiler: gcc
    #  language: python
    #  python: 3.7
    #  env: PYVER=3.7 PYNUM=3 PYTHON_INSTALL=pip BUILD_ARCH=aarch64
    #- os: linux
    #  arch: arm64
    #  dist: xenial
    #  compiler: gcc
    #  language: python
    #  python: 3.8
    #  env: PYVER=3.8 PYNUM=3 PYTHON_INSTALL=pip BUILD_ARCH=aarch64
    
install:
  #- travis_retry .travis/install_dependencies.sh
  #- export EIGEN3_INCLUDE_DIR=/usr/local/include/eigen3
  - if [ "$TRAVIS_OS_NAME" == osx ]; then export PATH="$PWD/miniconda/bin:$PATH"; source activate "$PYVER"; fi

before_script:
  - .travis/build_dynet.sh

after_failure:
  - cat $TRAVIS_BUILD_DIR/build/CMakeFiles/CMakeError.log

script:
  - .travis/test_dynet.sh

deploy:
  provider: script
  skip_cleanup: true
  script:
    - .travis/deploy.sh
  on:
    repo: clab/dynet
    tags: true
    condition: "$PYTHON_INSTALL = pip"
